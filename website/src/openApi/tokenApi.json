{
  "openapi": "3.1.0",
  "info": {
    "title": "Token API (Beta)",
    "description": "Power your apps & AI agents with real-time token data.",
    "version": "2.2.6+153a17c (2025-07-10)"
  },
  "servers": [
    {
      "url": "https://token-api.thegraph.com",
      "description": "Token API - Production"
    },
    {
      "url": "http://localhost:8000",
      "description": "Token API - Local"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {}
  },
  "paths": {
    "/nft/ownerships/evm/{address}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "token_id": {
                            "type": "string"
                          },
                          "token_standard": {
                            "type": "string",
                            "enum": [
                              "",
                              "ERC721",
                              "ERC1155"
                            ]
                          },
                          "contract": {
                            "type": "string",
                            "pattern": "^(0[xX])?[0-9a-fA-F]{40}$"
                          },
                          "owner": {
                            "type": "string",
                            "pattern": "^(0[xX])?[0-9a-fA-F]{40}$"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "uri": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "image": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "network_id": {
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ],
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet"
                          }
                        },
                        "required": [
                          "token_id",
                          "token_standard",
                          "contract",
                          "owner",
                          "network_id"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "token_id": "12",
                      "token_standard": "ERC721",
                      "contract": "0x000386e3f7559d9b6a2f5c46b4ad1a9587d59dc3",
                      "owner": "0xd8da6bf26964af9d7eed9e03e53415d37aa96045",
                      "symbol": "BANC",
                      "name": "Bored Ape Nike Club",
                      "network_id": "mainnet"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getNftOwnershipsEvmByAddress",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address",
              "example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            }
          },
          {
            "in": "query",
            "name": "token_standard",
            "schema": {
              "type": "string",
              "enum": [
                "",
                "ERC721",
                "ERC1155"
              ]
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            }
          }
        ],
        "summary": "NFT Ownerships",
        "description": "Provides NFT Ownerships for Account.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/nft/collections/evm/{contract}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contract": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "contract_creation": {
                            "type": "string"
                          },
                          "contract_creator": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "name": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "owners": {
                            "type": "number"
                          },
                          "total_supply": {
                            "type": "number"
                          },
                          "total_unique_supply": {
                            "type": "number"
                          },
                          "total_transfers": {
                            "type": "number"
                          },
                          "network_id": {
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ],
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet"
                          }
                        },
                        "required": [
                          "contract",
                          "contract_creation",
                          "contract_creator",
                          "name",
                          "symbol",
                          "owners",
                          "total_supply",
                          "total_unique_supply",
                          "total_transfers",
                          "network_id"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "token_standard": "ERC721",
                      "contract": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
                      "contract_creation": "2021-07-22 12:26:01",
                      "contract_creator": "0xe9da256a28630efdc637bfd4c65f0887be1aeda8",
                      "name": "PudgyPenguins",
                      "symbol": "PPG",
                      "owners": 12258,
                      "total_supply": 8888,
                      "total_unique_supply": 8888,
                      "total_transfers": 185128,
                      "network_id": "mainnet"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getNftCollectionsEvmByContract",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by NFT contract address",
              "example": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            }
          }
        ],
        "summary": "NFT Collection",
        "description": "Provides single NFT collection metadata, total supply, owners & total transfers.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/nft/items/evm/contract/{contract}/token_id/{token_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "token_id": {
                            "type": "string"
                          },
                          "token_standard": {
                            "type": "string",
                            "enum": [
                              "",
                              "ERC721",
                              "ERC1155"
                            ]
                          },
                          "contract": {
                            "type": "string",
                            "pattern": "^(0[xX])?[0-9a-fA-F]{40}$"
                          },
                          "owner": {
                            "type": "string",
                            "pattern": "^(0[xX])?[0-9a-fA-F]{40}$"
                          },
                          "uri": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "image": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "trait_type": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "display_type": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "trait_type",
                                "value"
                              ]
                            }
                          },
                          "network_id": {
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ],
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet"
                          }
                        },
                        "required": [
                          "token_id",
                          "token_standard",
                          "contract",
                          "owner",
                          "network_id"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "token_standard": "ERC721",
                      "contract": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
                      "token_id": "5712",
                      "owner": "0x9379557bdf32f5ee296ca7b360ccb8dcb9543d8e",
                      "uri": "ipfs://bafybeibc5sgo2plmjkq2tzmhrn54bk3crhnc23zd2msg4ea7a4pxrkgfna/5712",
                      "name": "Pudgy Penguin #5712",
                      "description": "A collection 8888 Cute Chubby Pudgy Penquins sliding around on the freezing ETH blockchain.",
                      "image": "ipfs://QmNf1UsmdGaMbpatQ6toXSkzDpizaGmC9zfunCyoz1enD5/penguin/5712.png",
                      "attributes": [
                        {
                          "trait_type": "Background",
                          "value": "Blue"
                        },
                        {
                          "trait_type": "Skin",
                          "value": "Olive Green"
                        },
                        {
                          "trait_type": "Body",
                          "value": "Turtleneck Green"
                        },
                        {
                          "trait_type": "Face",
                          "value": "Scar"
                        },
                        {
                          "trait_type": "Head",
                          "value": "Party Hat"
                        }
                      ],
                      "network_id": "mainnet"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getNftItemsEvmContractByContractToken_idByToken_id",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token_id",
            "schema": {
              "type": "string",
              "pattern": "^(\\d+|)$",
              "description": "NFT token ID",
              "example": "5712"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "contract",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by NFT contract address",
              "example": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            }
          }
        ],
        "summary": "NFT Items",
        "description": "Provides single NFT token metadata, ownership & traits.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/nft/activities/evm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "enum": [
                              "TRANSFER",
                              "MINT",
                              "BURN"
                            ]
                          },
                          "block_num": {
                            "type": "number"
                          },
                          "block_hash": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "string"
                          },
                          "tx_hash": {
                            "type": "string"
                          },
                          "contract": {
                            "type": "string",
                            "pattern": "^(0[xX])?[0-9a-fA-F]{40}$"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "from": {
                            "type": "string",
                            "pattern": "^(0[xX])?[0-9a-fA-F]{40}$"
                          },
                          "to": {
                            "type": "string",
                            "pattern": "^(0[xX])?[0-9a-fA-F]{40}$"
                          },
                          "token_id": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "transfer_type": {
                            "type": "string"
                          },
                          "token_standard": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "@type",
                          "block_num",
                          "block_hash",
                          "timestamp",
                          "tx_hash",
                          "contract",
                          "from",
                          "to",
                          "token_id",
                          "amount"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "@type": "TRANSFER",
                      "block_num": 22588725,
                      "block_hash": "0xe8d2f48bb5d7619fd0c180d6d54e7ca94c5f4eddfcfa7a82d4da55b310dd462a",
                      "timestamp": "2025-05-29 13:32:23",
                      "tx_hash": "0xa7b3302a5fe4a60e4ece22dfb2d98604daef5dc610fa328d8d0a7a92f3efc7b9",
                      "token_standard": "ERC721",
                      "contract": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
                      "name": "PudgyPenguins",
                      "symbol": "PPG",
                      "from": "0x2afec1c9af7a5494503f8acfd5c1fdd7d2c57480",
                      "to": "0x29469395eaf6f95920e59f858042f0e28d98a20b",
                      "token_id": "500",
                      "amount": 1,
                      "transfer_type": "Single"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getNftActivitiesEvm",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "contract",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by NFT contract address",
              "example": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "any",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address",
              "example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "enum": [
                "timestamp"
              ],
              "default": "timestamp",
              "description": "The field by which to order the results."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc",
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc)."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            },
            "required": false
          }
        ],
        "summary": "NFT Activities",
        "description": "Provides NFT Activities (ex: transfers, mints & burns).",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/nft/holders/evm/{contract}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "token_standard": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "quantity": {
                            "type": "number",
                            "description": "Number of tokens held by this address"
                          },
                          "unique_tokens": {
                            "type": "number",
                            "description": "Number of unique token IDs held by this address"
                          },
                          "percentage": {
                            "type": "number",
                            "description": "Percentage of total supply held by this address"
                          },
                          "network_id": {
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ],
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet"
                          }
                        },
                        "required": [
                          "token_standard",
                          "address",
                          "quantity",
                          "unique_tokens",
                          "percentage",
                          "network_id"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "token_standard": "ERC721",
                      "address": "0x29469395eaf6f95920e59f858042f0e28d98a20b",
                      "quantity": 534,
                      "unique_tokens": 534,
                      "percentage": 0.06008100810081008,
                      "network_id": "mainnet"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getNftHoldersEvmByContract",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by NFT contract address",
              "example": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            }
          }
        ],
        "summary": "NFT Holders",
        "description": "Provides NFT holders per contract.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/nft/sales/evm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string"
                          },
                          "block_num": {
                            "type": "number"
                          },
                          "tx_hash": {
                            "type": "string"
                          },
                          "token": {
                            "type": "string"
                          },
                          "token_id": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "offerer": {
                            "type": "string",
                            "pattern": "^(0[xX])?[0-9a-fA-F]{40}$"
                          },
                          "recipient": {
                            "type": "string",
                            "pattern": "^(0[xX])?[0-9a-fA-F]{40}$"
                          },
                          "sale_amount": {
                            "type": "number"
                          },
                          "sale_currency": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "timestamp",
                          "block_num",
                          "tx_hash",
                          "token",
                          "token_id",
                          "symbol",
                          "name",
                          "offerer",
                          "recipient",
                          "sale_amount",
                          "sale_currency"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "timestamp": "2025-05-29 07:52:47",
                      "block_num": 22587041,
                      "tx_hash": "0x6755df1514a066150357d454254e1ce6c1e043f873193125dc98d4c4417861ff",
                      "token": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
                      "token_id": "6398",
                      "symbol": "PPG",
                      "name": "PudgyPenguins",
                      "offerer": "0xf671888173bf2fe28d71fba3106cf36d10f470fe",
                      "recipient": "0x43bf952762b087195b8ea70cf81cb6715b6bf5a9",
                      "sale_amount": 10.0667234,
                      "sale_currency": "ETH"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getNftSalesEvm",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "contract",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by NFT contract address",
              "example": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "token_id",
            "schema": {
              "type": "string",
              "pattern": "^(\\d+|)$",
              "description": "NFT token ID",
              "example": "5712"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "any",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "offerer",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "recipient",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "enum": [
                "timestamp"
              ],
              "default": "timestamp",
              "description": "The field by which to order the results."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc",
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc)."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            },
            "required": false
          }
        ],
        "summary": "NFT Sales",
        "description": "Provides latest NFT marketplace sales.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/balances/evm/{address}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string"
                          },
                          "contract": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "network_id": {
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ],
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "decimals": {
                            "type": "number"
                          },
                          "price_usd": {
                            "type": "number"
                          },
                          "value_usd": {
                            "type": "number"
                          },
                          "low_liquidity": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "contract",
                          "amount",
                          "value",
                          "network_id"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "block_num": 22586773,
                      "datetime": "2025-05-29 06:58:47",
                      "contract": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
                      "amount": "237637742936991878321",
                      "value": 237.63774293699188,
                      "decimals": 18,
                      "symbol": "ETH",
                      "network_id": "mainnet"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getBalancesEvmByAddress",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address",
              "example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            }
          },
          {
            "in": "query",
            "name": "contract",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            }
          }
        ],
        "summary": "Balances by Address",
        "description": "Provides latest ERC-20 & Native balances by wallet address.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/balances/svm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "program_id": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "token_account": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "mint": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "decimals": {
                            "type": "number"
                          },
                          "network_id": {
                            "type": "string",
                            "enum": [
                              "solana"
                            ],
                            "description": "The Graph Network ID for SVM networks https://thegraph.com/networks",
                            "example": "solana"
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "timestamp",
                          "program_id",
                          "token_account",
                          "mint",
                          "amount",
                          "value",
                          "decimals",
                          "network_id"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "block_num": 352305913,
                      "datetime": "2025-07-10 05:14:43",
                      "timestamp": 1752124483,
                      "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                      "token_account": "4ct7br2vTPzfdmY3S5HLtTxcGSBfn6pnw98hsS6v359A",
                      "mint": "So11111111111111111111111111111111111111112",
                      "amount": "30697740781078",
                      "value": 30697.740781078,
                      "decimals": 9,
                      "network_id": "solana"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getBalancesSvm",
        "tags": [
          "SVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token_account",
            "schema": {
              "type": "string",
              "pattern": "^[1-9A-HJ-NP-Za-km-z]{32,44}$",
              "description": "Filter by token account address"
            }
          },
          {
            "in": "query",
            "name": "mint",
            "schema": {
              "type": "string",
              "pattern": "^[1-9A-HJ-NP-Za-km-z]{32,44}$",
              "description": "Filter by mint address",
              "example": "So11111111111111111111111111111111111111112"
            }
          },
          {
            "in": "query",
            "name": "program_id",
            "schema": {
              "type": "string",
              "enum": [
                "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb",
                "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
              ],
              "description": "Filter by program ID"
            }
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "solana"
              ],
              "description": "The Graph Network ID for SVM networks https://thegraph.com/networks",
              "example": "solana"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            }
          }
        ],
        "summary": "Balances",
        "description": "Provides Solana SPL tokens balances by token account address.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/transfers/evm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "transaction_id": {
                            "type": "string"
                          },
                          "contract": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "from": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "to": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "network_id": {
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ],
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "decimals": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "timestamp",
                          "transaction_id",
                          "contract",
                          "from",
                          "to",
                          "amount",
                          "value",
                          "network_id"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "block_num": 22349873,
                      "datetime": "2025-04-26 01:18:47",
                      "timestamp": 1745630327,
                      "transaction_id": "0xd80ed9764b0bc25b982668f66ec1cf46dbe27bcd01dffcd487f43c92f72b2a84",
                      "contract": "0xc944e90c64b2c07662a292be6244bdf05cda44a7",
                      "from": "0x7d2fbc0eefdb8721b27d216469e79ef288910a83",
                      "to": "0xa5eb953d1ce9d6a99893cbf6d83d8abcca9b8804",
                      "decimals": 18,
                      "symbol": "GRT",
                      "value": 11068.393958659999
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getTransfersEvm",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            }
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address"
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address",
              "example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
            }
          },
          {
            "in": "query",
            "name": "contract",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address"
            }
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            }
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "enum": [
                "timestamp"
              ],
              "default": "timestamp",
              "description": "The field by which to order the results."
            }
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc",
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc)."
            }
          },
          {
            "in": "query",
            "name": "transaction_id",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{64}$",
              "description": "Filter by transaction"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            }
          }
        ],
        "summary": "Transfers Events",
        "description": "Provides ERC-20 & Native transfer events.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/transfers/svm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "signature": {
                            "type": "string"
                          },
                          "program_id": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "mint": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "authority": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "source": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "destination": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "decimals": {
                            "type": [
                              "integer",
                              "null"
                            ]
                          },
                          "network_id": {
                            "type": "string",
                            "enum": [
                              "solana"
                            ],
                            "description": "The Graph Network ID for SVM networks https://thegraph.com/networks",
                            "example": "solana"
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "timestamp",
                          "signature",
                          "program_id",
                          "mint",
                          "authority",
                          "source",
                          "destination",
                          "amount",
                          "value",
                          "decimals",
                          "network_id"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "block_num": 352372432,
                      "datetime": "2025-07-10 12:32:03",
                      "timestamp": 1752150723,
                      "signature": "4t7ZD3Fd8i9md6CTF6SEoZ9aPkr1fhRpXXSK2DhrUe5Wcm9VFdJ9Sn4WvbhdQaetLkiq8Xm3r5YgU1ffSJaA6c2e",
                      "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                      "authority": "J5kWrUKVPrtjwMVQLNgUEC9RY9Ujh8pYTN3nqWUkg1zp",
                      "mint": "So11111111111111111111111111111111111111112",
                      "source": "G4sbSww72omqHsC6tYe4syFtzHyBieS6MjbRWmSn1mt5",
                      "destination": "7ds7shXvLdNzihJXrjuoYYTr8bD5c2zwRxmZrrSZXgmM",
                      "amount": 333993128,
                      "decimals": 9,
                      "value": 0.333993128,
                      "network_id": "solana"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getTransfersSvm",
        "tags": [
          "SVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "solana"
              ],
              "description": "The Graph Network ID for SVM networks https://thegraph.com/networks",
              "example": "solana"
            }
          },
          {
            "in": "query",
            "name": "mint",
            "schema": {
              "type": "string",
              "pattern": "^[1-9A-HJ-NP-Za-km-z]{32,44}$",
              "description": "Filter by mint address",
              "example": "So11111111111111111111111111111111111111112"
            }
          },
          {
            "in": "query",
            "name": "source",
            "schema": {
              "type": "string",
              "pattern": "^[1-9A-HJ-NP-Za-km-z]{32,44}$",
              "description": "Filter by token account address"
            }
          },
          {
            "in": "query",
            "name": "destination",
            "schema": {
              "type": "string",
              "pattern": "^[1-9A-HJ-NP-Za-km-z]{32,44}$",
              "description": "Filter by token account address"
            }
          },
          {
            "in": "query",
            "name": "authority",
            "schema": {
              "type": "string",
              "pattern": "^[1-9A-HJ-NP-Za-km-z]{32,44}$",
              "description": "Filter by authority token account address"
            }
          },
          {
            "in": "query",
            "name": "program_id",
            "schema": {
              "type": "string",
              "enum": [
                "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb",
                "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
              ],
              "description": "Filter by program ID"
            }
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            }
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "enum": [
                "timestamp"
              ],
              "default": "timestamp",
              "description": "The field by which to order the results."
            }
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc",
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc)."
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            }
          }
        ],
        "summary": "Transfers Events",
        "description": "Provides SPL transfer events.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tokens/evm/{contract}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "circulating_supply": {
                            "type": "string"
                          },
                          "holders": {
                            "type": "number"
                          },
                          "network_id": {
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ],
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet"
                          },
                          "icon": {
                            "type": "object",
                            "properties": {
                              "web3icon": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "web3icon"
                            ]
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "decimals": {
                            "type": "number"
                          },
                          "price_usd": {
                            "type": "number"
                          },
                          "market_cap": {
                            "type": "number"
                          },
                          "low_liquidity": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "address",
                          "circulating_supply",
                          "holders",
                          "network_id",
                          "icon"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "block_num": 22589353,
                      "datetime": "2025-05-29 15:40:11",
                      "address": "0xc944e90c64b2c07662a292be6244bdf05cda44a7",
                      "decimals": 18,
                      "symbol": "GRT",
                      "name": "Graph Token",
                      "circulating_supply": "16667753581.233711",
                      "holders": 139562,
                      "network_id": "mainnet",
                      "icon": {
                        "web3icon": "GRT"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getTokensEvmByContract",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by contract address",
              "example": "0xc944e90c64b2c07662a292be6244bdf05cda44a7"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            }
          }
        ],
        "summary": "Token Metadata",
        "description": "Provides ERC-20 token contract metadata.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/holders/evm/{contract}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "network_id": {
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ],
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "decimals": {
                            "type": "number"
                          },
                          "price_usd": {
                            "type": "number"
                          },
                          "value_usd": {
                            "type": "number"
                          },
                          "low_liquidity": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "address",
                          "amount",
                          "value",
                          "network_id"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "block_num": 22578579,
                      "last_balance_update": "2025-05-28 03:25:47",
                      "address": "0x36aff7001294dae4c2ed4fdefc478a00de77f090",
                      "amount": "2868440291872963359806035918",
                      "value": 2868440291.8729634,
                      "decimals": 18,
                      "symbol": "GRT",
                      "network_id": "mainnet"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getHoldersEvmByContract",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by contract address",
              "example": "0xc944e90c64b2c07662a292be6244bdf05cda44a7"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "enum": [
                "value"
              ],
              "default": "value",
              "description": "The field by which to order the results."
            }
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc",
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc)."
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            }
          }
        ],
        "summary": "Token Holders",
        "description": "Provides ERC-20 token holder balances by contract address.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/swaps/evm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "network_id": {
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ],
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet"
                          },
                          "transaction_id": {
                            "type": "string"
                          },
                          "caller": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "sender": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "recipient": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "factory": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "pool": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "token0": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "Filter by address"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "address",
                              "symbol",
                              "decimals"
                            ]
                          },
                          "token1": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "Filter by address"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "address",
                              "symbol",
                              "decimals"
                            ]
                          },
                          "amount0": {
                            "type": "string"
                          },
                          "amount1": {
                            "type": "string"
                          },
                          "price0": {
                            "type": "number"
                          },
                          "price1": {
                            "type": "number"
                          },
                          "value0": {
                            "type": "number"
                          },
                          "value1": {
                            "type": "number"
                          },
                          "fee": {
                            "type": "string"
                          },
                          "protocol": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "timestamp",
                          "network_id",
                          "transaction_id",
                          "caller",
                          "sender",
                          "recipient",
                          "factory",
                          "pool",
                          "token0",
                          "token1",
                          "amount0",
                          "amount1",
                          "price0",
                          "price1",
                          "value0",
                          "value1",
                          "fee",
                          "protocol"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "block_num": 22589391,
                      "datetime": "2025-05-29 15:47:47",
                      "timestamp": 1748533667,
                      "transaction_id": "0x1ce019b0ad129b8bd21b6c83b75de5e5fd7cd07f2ee739ca3198adcbeb61f5a9",
                      "caller": "0x66a9893cc07d91d95644aedd05d03f95e1dba8af",
                      "pool": "0xb98437c7ba28c6590dd4e1cc46aa89eed181f97108e5b6221730d41347bc817f",
                      "factory": "0x000000000004444c5dc75cb358380d2e3de08a90",
                      "token0": {
                        "address": "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",
                        "symbol": "WBTC",
                        "decimals": 8
                      },
                      "token1": {
                        "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
                        "symbol": "USDC",
                        "decimals": 6
                      },
                      "sender": "0x66a9893cc07d91d95644aedd05d03f95e1dba8af",
                      "recipient": null,
                      "amount0": "-894320",
                      "amount1": "957798098",
                      "value0": -0.0089432,
                      "value1": 957.798098,
                      "price0": 107417.48517180652,
                      "price1": 0.00000930947134352077,
                      "protocol": "uniswap_v4",
                      "network_id": "mainnet"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getSwapsEvm",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            }
          },
          {
            "in": "query",
            "name": "pool",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by contract address",
              "example": "0x88e6A0c2dDD26FEEb64F039a2c41296FcB3f5640"
            }
          },
          {
            "in": "query",
            "name": "caller",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address"
            }
          },
          {
            "in": "query",
            "name": "sender",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address"
            }
          },
          {
            "in": "query",
            "name": "recipient",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address"
            }
          },
          {
            "in": "query",
            "name": "protocol",
            "schema": {
              "type": "string",
              "enum": [
                "uniswap_v2",
                "uniswap_v3"
              ],
              "description": "Protocol name",
              "example": "uniswap_v3"
            }
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            }
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "enum": [
                "timestamp"
              ],
              "default": "timestamp",
              "description": "The field by which to order the results."
            }
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc",
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc)."
            }
          },
          {
            "in": "query",
            "name": "transaction_id",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{64}$",
              "description": "Filter by transaction"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            }
          }
        ],
        "summary": "Swap Events",
        "description": "Provides Uniswap V2 & V3 swap events.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/swaps/svm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "transaction_index": {
                            "type": "number"
                          },
                          "instruction_index": {
                            "type": "number"
                          },
                          "signature": {
                            "type": "string"
                          },
                          "program_id": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "program_name": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "amm": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "amm_name": {
                            "type": "string"
                          },
                          "amm_pool": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "input_mint": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "Filter by address"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "address",
                              "symbol",
                              "decimals"
                            ]
                          },
                          "input_amount": {
                            "type": "number"
                          },
                          "output_mint": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "Filter by address"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "address",
                              "symbol",
                              "decimals"
                            ]
                          },
                          "output_amount": {
                            "type": "number"
                          },
                          "network_id": {
                            "type": "string",
                            "enum": [
                              "solana"
                            ],
                            "description": "The Graph Network ID for SVM networks https://thegraph.com/networks",
                            "example": "solana"
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "timestamp",
                          "transaction_index",
                          "instruction_index",
                          "signature",
                          "program_id",
                          "program_name",
                          "user",
                          "amm",
                          "amm_name",
                          "input_mint",
                          "input_amount",
                          "output_mint",
                          "output_amount",
                          "network_id"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "block_num": 352243599,
                      "datetime": "2025-07-09 22:24:36",
                      "timestamp": 1752099876,
                      "signature": "oWHA7wPQwpZhr9RJSbTNxsnPkBo1wnd68Zt2fJZPyK3cf1vYVzQiC9Et2mRNvh1t9Zt5dtmoEeSErSCqmMQ58Ls\u0000",
                      "program_id": "pAMMBay6oceH9fJKBRHGP5D4bD4sWpmSwMn52FMfXEA",
                      "program_name": "Pump.fun AMM",
                      "amm": "pAMMBay6oceH9fJKBRHGP5D4bD4sWpmSwMn52FMfXEA",
                      "amm_name": "Pump.fun AMM",
                      "amm_pool": "AmmpSnW5xVeKHTAU9fMjyKEMPgrzmUj3ah5vgvHhAB5J",
                      "user": "AEWxmZPEdHkCjJXVT9MreY7fCvzbpEK3wCVouCoEnmvE",
                      "input_mint": "9BB6NFEcjBCtnNLFko2FqVQBq8HHM13kCyYcdQbgpump",
                      "input_amount": 3653743,
                      "output_mint": "So11111111111111111111111111111111111111112",
                      "output_amount": 25548025,
                      "network_id": "solana"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getSwapsSvm",
        "tags": [
          "SVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "solana"
              ],
              "description": "The Graph Network ID for SVM networks https://thegraph.com/networks",
              "example": "solana"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "program_id",
            "schema": {
              "type": "string",
              "enum": [
                "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",
                "6EF8rrecthR5Dkzon8Nwu78hRvfCKubJ14M5uBEwF6P",
                "pAMMBay6oceH9fJKBRHGP5D4bD4sWpmSwMn52FMfXEA",
                "JUP4Fb2cqiRUcaTHdrPC8h2gNsA2ETXiPDD33WcGuJB",
                "JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4"
              ],
              "description": "Filter by program ID",
              "example": "pAMMBay6oceH9fJKBRHGP5D4bD4sWpmSwMn52FMfXEA"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "amm",
            "schema": {
              "type": "string",
              "pattern": "^[1-9A-HJ-NP-Za-km-z]{32,44}$",
              "description": "Filter by amm address"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "amm_pool",
            "schema": {
              "type": "string",
              "pattern": "^[1-9A-HJ-NP-Za-km-z]{32,44}$",
              "description": "Filter by amm pool address"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "string",
              "pattern": "^[1-9A-HJ-NP-Za-km-z]{32,44}$",
              "description": "Filter by user address"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "input_mint",
            "schema": {
              "type": "string",
              "pattern": "^[1-9A-HJ-NP-Za-km-z]{32,44}$",
              "description": "Filter by mint address"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "output_mint",
            "schema": {
              "type": "string",
              "pattern": "^[1-9A-HJ-NP-Za-km-z]{32,44}$",
              "description": "Filter by mint address"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string",
              "enum": [
                "timestamp"
              ],
              "default": "timestamp",
              "description": "The field by which to order the results."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc",
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc)."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "signature",
            "schema": {
              "type": "string",
              "pattern": "^[1-9A-HJ-NP-Za-km-z]{87,88}$",
              "description": "Filter by transaction signature"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            },
            "required": false
          }
        ],
        "summary": "Swap Events",
        "description": "Provides AMM Swap events.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/pools/evm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string"
                          },
                          "network_id": {
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ],
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet"
                          },
                          "transaction_id": {
                            "type": "string"
                          },
                          "factory": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "pool": {
                            "type": "string",
                            "description": "Filter by address"
                          },
                          "token0": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "Filter by address"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "address",
                              "symbol",
                              "decimals"
                            ]
                          },
                          "token1": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "Filter by address"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "address",
                              "symbol",
                              "decimals"
                            ]
                          },
                          "fee": {
                            "type": "number"
                          },
                          "protocol": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "network_id",
                          "transaction_id",
                          "factory",
                          "pool",
                          "token0",
                          "token1",
                          "fee",
                          "protocol"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "block_num": 22589384,
                      "datetime": "2025-05-29 15:46:23",
                      "transaction_id": "0x43cee95f1449b6b4d394fab31234fd6decdcd049153cc1338fe627e5483a3d36",
                      "factory": "0x000000000004444c5dc75cb358380d2e3de08a90",
                      "pool": "0x12b900f4e5c4b1d2aab6870220345c668b068fc6e588dd59dfe6f223d60608f1",
                      "token0": {
                        "address": "0xdac17f958d2ee523a2206206994597c13d831ec7",
                        "symbol": "USDT",
                        "decimals": 6
                      },
                      "token1": {
                        "address": "0xf2c88757f8d03634671208935974b60a2a28bdb3",
                        "symbol": "SHELL",
                        "decimals": 18
                      },
                      "fee": 699000,
                      "protocol": "uniswap_v4",
                      "network_id": "mainnet"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getPoolsEvm",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            }
          },
          {
            "in": "query",
            "name": "pool",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by contract address",
              "example": "0x88e6A0c2dDD26FEEb64F039a2c41296FcB3f5640"
            }
          },
          {
            "in": "query",
            "name": "factory",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address"
            }
          },
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address"
            }
          },
          {
            "in": "query",
            "name": "symbol",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "protocol",
            "schema": {
              "type": "string",
              "enum": [
                "uniswap_v2",
                "uniswap_v3"
              ],
              "description": "Protocol name",
              "example": "uniswap_v3"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            }
          }
        ],
        "summary": "Liquidity Pools",
        "description": "Provides Uniswap V2 & V3 liquidity pool metadata.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ohlc/pools/evm/{pool}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "ticker": {
                            "type": "string"
                          },
                          "open": {
                            "type": "number"
                          },
                          "high": {
                            "type": "number"
                          },
                          "low": {
                            "type": "number"
                          },
                          "close": {
                            "type": "number"
                          },
                          "volume": {
                            "type": "number"
                          },
                          "uaw": {
                            "type": "number"
                          },
                          "transactions": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "datetime",
                          "ticker",
                          "open",
                          "high",
                          "low",
                          "close",
                          "volume",
                          "uaw",
                          "transactions"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "datetime": "2025-05-29 15:00:00",
                      "ticker": "WETHUSDC",
                      "open": 2674.206768283323,
                      "high": 2674.206768283323,
                      "low": 2648.1288363948797,
                      "close": 2648.1288363948797,
                      "volume": 5062048.294222999,
                      "transactions": 169
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getOhlcPoolsEvmByPool",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pool",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by contract address",
              "example": "0x88e6A0c2dDD26FEEb64F039a2c41296FcB3f5640"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            }
          },
          {
            "in": "query",
            "name": "interval",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "4h",
                "1d",
                "1w"
              ],
              "default": "1h",
              "description": "The interval for which to aggregate price data (hourly, 4-hours, daily or weekly)."
            }
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            }
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            }
          }
        ],
        "summary": "OHLCV by Pool",
        "description": "Provides pricing data in the Open/High/Low/Close/Volume (OHCLV) format.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ohlc/prices/evm/{contract}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "ticker": {
                            "type": "string"
                          },
                          "open": {
                            "type": "number"
                          },
                          "high": {
                            "type": "number"
                          },
                          "low": {
                            "type": "number"
                          },
                          "close": {
                            "type": "number"
                          },
                          "volume": {
                            "type": "number"
                          },
                          "uaw": {
                            "type": "number"
                          },
                          "transactions": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "datetime",
                          "ticker",
                          "open",
                          "high",
                          "low",
                          "close",
                          "volume",
                          "uaw",
                          "transactions"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "datetime": "2025-05-29 15:00:00",
                      "ticker": "WETHUSD",
                      "open": 2669.130852861705,
                      "high": 2669.130852861705,
                      "low": 2669.130852861705,
                      "close": 2669.130852861705,
                      "volume": 184897.1695477702,
                      "uaw": 31,
                      "transactions": 35
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getOhlcPricesEvmByContract",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by contract address",
              "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            }
          },
          {
            "in": "query",
            "name": "interval",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "4h",
                "1d",
                "1w"
              ],
              "default": "1h",
              "description": "The interval for which to aggregate price data (hourly, 4-hours, daily or weekly)."
            }
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            }
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            }
          }
        ],
        "summary": "OHLCV by Contract",
        "description": "Provides pricing data in the Open/High/Low/Close/Volume (OHCLV) format.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/historical/balances/evm/{address}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "contract": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "decimals": {
                            "type": "string"
                          },
                          "open": {
                            "type": "number"
                          },
                          "high": {
                            "type": "number"
                          },
                          "low": {
                            "type": "number"
                          },
                          "close": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "datetime",
                          "contract",
                          "name",
                          "symbol",
                          "decimals",
                          "open",
                          "high",
                          "low",
                          "close"
                        ]
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "datetime": "2025-01-26 13:00:00",
                      "name": "Wrapped Ether",
                      "symbol": "WETH",
                      "decimals": 18,
                      "network_id": "mainnet",
                      "open": 16.32030978771529,
                      "high": 16.32030978771529,
                      "low": 16.32030978771529,
                      "close": 16.32030978771529
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getHistoricalBalancesEvmByAddress",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "schema": {
              "type": "string",
              "pattern": "^(0[xX])?[0-9a-fA-F]{40}$",
              "description": "Filter by address",
              "example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "interval",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "4h",
                "1d",
                "1w"
              ],
              "default": "1h",
              "description": "The interval for which to aggregate price data (hourly, 4-hours, daily or weekly)."
            }
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ],
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet"
            }
          },
          {
            "in": "query",
            "name": "contracts",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            }
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "type": "number",
              "minimum": 0,
              "description": "UNIX timestamp in seconds."
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 10,
              "description": "The maximum number of items returned in a single request."
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "The page number of the results to return."
            }
          }
        ],
        "summary": "Historical Balances",
        "description": "Provides historical ERC-20 & Native balances by wallet address.",
        "x-tagGroups": [
          "Historical"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "OK"
              }
            }
          },
          "403": {
            "description": "Authentication Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "status": 403,
                  "code": "authentication_failed"
                }
              }
            }
          },
          "500": {
            "description": "Database Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "status": 500,
                  "code": "bad_database_response"
                }
              }
            }
          },
          "502": {
            "description": "Connection Refused",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "status": 502,
                  "code": "connection_refused"
                }
              }
            }
          }
        },
        "operationId": "getHealth",
        "tags": [
          "Monitoring"
        ],
        "parameters": [],
        "description": "Get health status of the API"
      }
    },
    "/version": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string"
                    },
                    "commit": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "version",
                    "date",
                    "commit"
                  ]
                },
                "example": {
                  "version": "2.2.6",
                  "commit": "153a17c",
                  "date": "2025-07-10",
                  "repo": "pinax-network/token-api"
                }
              }
            }
          }
        },
        "operationId": "getVersion",
        "tags": [
          "Monitoring"
        ],
        "parameters": [],
        "description": "Get the version of the API"
      }
    },
    "/networks": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "networks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "fullName": {
                            "type": "string"
                          },
                          "shortName": {
                            "type": "string"
                          },
                          "caip2Id": {
                            "type": "string"
                          },
                          "networkType": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "object",
                            "properties": {
                              "web3Icons": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "required": [
                              "web3Icons"
                            ]
                          },
                          "alias": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "fullName",
                          "shortName",
                          "caip2Id",
                          "networkType",
                          "icon",
                          "alias"
                        ]
                      }
                    }
                  },
                  "required": [
                    "networks"
                  ]
                },
                "example": {
                  "networks": [
                    {
                      "id": "mainnet",
                      "fullName": "Ethereum Mainnet",
                      "shortName": "Ethereum",
                      "networkType": "mainnet",
                      "nativeToken": "ETH",
                      "caip2Id": "eip155:1",
                      "icon": {
                        "web3Icons": {
                          "name": "ethereum"
                        }
                      },
                      "aliases": [
                        "ethereum",
                        "eth",
                        "eth-mainnet",
                        "evm-1"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "getNetworks",
        "tags": [
          "Monitoring"
        ],
        "parameters": [],
        "description": "Get supported networks of the API"
      }
    }
  }
}