{
  "openapi": "3.1.0",
  "info": {
    "title": "Token API (Beta)",
    "description": "Power your apps & AI agents with real-time token data.",
    "version": "2.4.4+39f504c (2025-08-07)"
  },
  "servers": [
    {
      "url": "https://token-api.thegraph.com/",
      "description": "Token API - Remote"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {}
  },
  "paths": {
    "/nft/ownerships/evm/{address}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "token_id": {
                            "type": "string"
                          },
                          "token_standard": {
                            "default": "",
                            "type": "string",
                            "enum": [
                              "",
                              "ERC721",
                              "ERC1155"
                            ]
                          },
                          "contract": {
                            "type": "string"
                          },
                          "owner": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "uri": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "image": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "network_id": {
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet",
                            "default": "mainnet",
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ]
                          }
                        },
                        "required": [
                          "token_id",
                          "token_standard",
                          "contract",
                          "owner",
                          "network_id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "token_id": "12",
                          "token_standard": "ERC721",
                          "contract": "0x000386e3f7559d9b6a2f5c46b4ad1a9587d59dc3",
                          "owner": "0xd8da6bf26964af9d7eed9e03e53415d37aa96045",
                          "symbol": "BANC",
                          "name": "Bored Ape Nike Club",
                          "network_id": "mainnet"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getNftOwnershipsEvmByAddress",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "schema": {
              "description": "Filter by address",
              "example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
              "default": "",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "token_standard",
            "schema": {
              "default": "",
              "type": "string",
              "enum": [
                "",
                "ERC721",
                "ERC1155"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "contract",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "NFT Ownerships by Address",
        "description": "Returns NFT tokens owned by a wallet address with metadata and ownership information.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/nft/collections/evm/{contract}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contract": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "contract_creation": {
                            "type": "string"
                          },
                          "contract_creator": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "owners": {
                            "type": "number"
                          },
                          "total_supply": {
                            "type": "number"
                          },
                          "total_unique_supply": {
                            "type": "number"
                          },
                          "total_transfers": {
                            "type": "number"
                          },
                          "network_id": {
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet",
                            "default": "mainnet",
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ]
                          }
                        },
                        "required": [
                          "contract",
                          "contract_creation",
                          "contract_creator",
                          "name",
                          "symbol",
                          "owners",
                          "total_supply",
                          "total_unique_supply",
                          "total_transfers",
                          "network_id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "token_standard": "ERC721",
                          "contract": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
                          "contract_creation": "2021-07-22 12:26:01",
                          "contract_creator": "0xe9da256a28630efdc637bfd4c65f0887be1aeda8",
                          "name": "PudgyPenguins",
                          "symbol": "PPG",
                          "owners": 12258,
                          "total_supply": 8888,
                          "total_unique_supply": 8888,
                          "total_transfers": 185128,
                          "network_id": "mainnet"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getNftCollectionsEvmByContract",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "schema": {
              "description": "Filter by NFT contract address",
              "example": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
              "default": "",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          }
        ],
        "summary": "NFT Collection",
        "description": "Returns NFT collection metadata, supply statistics, owner count, and transfer history.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/nft/items/evm/contract/{contract}/token_id/{token_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "token_id": {
                            "type": "string"
                          },
                          "token_standard": {
                            "default": "",
                            "type": "string",
                            "enum": [
                              "",
                              "ERC721",
                              "ERC1155"
                            ]
                          },
                          "contract": {
                            "type": "string"
                          },
                          "owner": {
                            "type": "string"
                          },
                          "uri": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "image": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "trait_type": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "display_type": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "trait_type",
                                "value"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "network_id": {
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet",
                            "default": "mainnet",
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ]
                          }
                        },
                        "required": [
                          "token_id",
                          "token_standard",
                          "contract",
                          "owner",
                          "network_id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "token_standard": "ERC721",
                          "contract": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
                          "token_id": "5712",
                          "owner": "0x9379557bdf32f5ee296ca7b360ccb8dcb9543d8e",
                          "uri": "ipfs://bafybeibc5sgo2plmjkq2tzmhrn54bk3crhnc23zd2msg4ea7a4pxrkgfna/5712",
                          "name": "Pudgy Penguin #5712",
                          "description": "A collection 8888 Cute Chubby Pudgy Penquins sliding around on the freezing ETH blockchain.",
                          "image": "ipfs://QmNf1UsmdGaMbpatQ6toXSkzDpizaGmC9zfunCyoz1enD5/penguin/5712.png",
                          "attributes": [
                            {
                              "trait_type": "Background",
                              "value": "Blue"
                            },
                            {
                              "trait_type": "Skin",
                              "value": "Olive Green"
                            },
                            {
                              "trait_type": "Body",
                              "value": "Turtleneck Green"
                            },
                            {
                              "trait_type": "Face",
                              "value": "Scar"
                            },
                            {
                              "trait_type": "Head",
                              "value": "Party Hat"
                            }
                          ],
                          "network_id": "mainnet"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getNftItemsEvmContractByContractToken_idByToken_id",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token_id",
            "schema": {
              "description": "NFT token ID",
              "example": "5712",
              "default": "",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "contract",
            "schema": {
              "description": "Filter by NFT contract address",
              "example": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
              "default": "",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          }
        ],
        "summary": "NFT Items",
        "description": "Returns NFT token metadata, attributes, current owner, and media URIs.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/nft/activities/evm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "@type": {
                            "type": "string",
                            "enum": [
                              "TRANSFER",
                              "MINT",
                              "BURN"
                            ]
                          },
                          "block_num": {
                            "type": "number"
                          },
                          "block_hash": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "string"
                          },
                          "tx_hash": {
                            "type": "string"
                          },
                          "contract": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "from": {
                            "type": "string"
                          },
                          "to": {
                            "type": "string"
                          },
                          "token_id": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "transfer_type": {
                            "type": "string"
                          },
                          "token_standard": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "@type",
                          "block_num",
                          "block_hash",
                          "timestamp",
                          "tx_hash",
                          "contract",
                          "from",
                          "to",
                          "token_id",
                          "amount"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "@type": "TRANSFER",
                          "block_num": 22588725,
                          "block_hash": "0xe8d2f48bb5d7619fd0c180d6d54e7ca94c5f4eddfcfa7a82d4da55b310dd462a",
                          "timestamp": "2025-05-29 13:32:23",
                          "tx_hash": "0xa7b3302a5fe4a60e4ece22dfb2d98604daef5dc610fa328d8d0a7a92f3efc7b9",
                          "token_standard": "ERC721",
                          "contract": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
                          "name": "PudgyPenguins",
                          "symbol": "PPG",
                          "from": "0x2afec1c9af7a5494503f8acfd5c1fdd7d2c57480",
                          "to": "0x29469395eaf6f95920e59f858042f0e28d98a20b",
                          "token_id": "500",
                          "amount": 1,
                          "transfer_type": "Single"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getNftActivitiesEvm",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "contract",
            "schema": {
              "description": "Filter by NFT contract address",
              "example": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
              "default": "",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "anyAddress",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "fromAddress",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "toAddress",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "default": 0,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "default": 9999999999,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "description": "The field by which to order the results.",
              "default": "timestamp",
              "type": "string",
              "enum": [
                "timestamp"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc).",
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "NFT Activities",
        "description": "Returns NFT transfer events including mints, burns, and ownership changes.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/nft/holders/evm/{contract}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "token_standard": {
                            "type": "string"
                          },
                          "address": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "quantity": {
                            "description": "Number of tokens held by this address",
                            "type": "number"
                          },
                          "unique_tokens": {
                            "description": "Number of unique token IDs held by this address",
                            "type": "number"
                          },
                          "percentage": {
                            "description": "Percentage of total supply held by this address",
                            "type": "number"
                          },
                          "network_id": {
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet",
                            "default": "mainnet",
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ]
                          }
                        },
                        "required": [
                          "token_standard",
                          "address",
                          "quantity",
                          "unique_tokens",
                          "percentage",
                          "network_id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "token_standard": "ERC721",
                          "address": "0x29469395eaf6f95920e59f858042f0e28d98a20b",
                          "quantity": 534,
                          "unique_tokens": 534,
                          "percentage": 0.06008100810081008,
                          "network_id": "mainnet"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getNftHoldersEvmByContract",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "schema": {
              "description": "Filter by NFT contract address",
              "example": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
              "default": "",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          }
        ],
        "summary": "NFT Holders",
        "description": "Returns wallet addresses holding NFT collection tokens with quantity and percentage distribution.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/nft/sales/evm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string"
                          },
                          "block_num": {
                            "type": "number"
                          },
                          "tx_hash": {
                            "type": "string"
                          },
                          "token": {
                            "type": "string"
                          },
                          "token_id": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "offerer": {
                            "type": "string"
                          },
                          "recipient": {
                            "type": "string"
                          },
                          "sale_amount": {
                            "type": "number"
                          },
                          "sale_currency": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "timestamp",
                          "block_num",
                          "tx_hash",
                          "token",
                          "token_id",
                          "symbol",
                          "name",
                          "offerer",
                          "recipient",
                          "sale_amount",
                          "sale_currency"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "timestamp": "2025-05-29 07:52:47",
                          "block_num": 22587041,
                          "tx_hash": "0x6755df1514a066150357d454254e1ce6c1e043f873193125dc98d4c4417861ff",
                          "token": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
                          "token_id": "6398",
                          "symbol": "PPG",
                          "name": "PudgyPenguins",
                          "offerer": "0xf671888173bf2fe28d71fba3106cf36d10f470fe",
                          "recipient": "0x43bf952762b087195b8ea70cf81cb6715b6bf5a9",
                          "sale_amount": 10.0667234,
                          "sale_currency": "ETH"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getNftSalesEvm",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "contract",
            "schema": {
              "description": "Filter by NFT contract address",
              "example": "0xbd3531da5cf5857e7cfaa92426877b022e612cf8",
              "default": "",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "token_id",
            "schema": {
              "description": "NFT token ID",
              "example": "5712",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "anyAddress",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "offererAddress",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "recipientAddress",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "default": 0,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "default": 9999999999,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "description": "The field by which to order the results.",
              "default": "timestamp",
              "type": "string",
              "enum": [
                "timestamp"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc).",
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "NFT Sales",
        "description": "Returns NFT marketplace sales with price, buyer, seller, and transaction data.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/balances/evm/{address}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "last_balance_update": {
                            "type": "string"
                          },
                          "contract": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "network_id": {
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet",
                            "default": "mainnet",
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "decimals": {
                            "type": "number"
                          },
                          "price_usd": {
                            "type": "number"
                          },
                          "value_usd": {
                            "type": "number"
                          },
                          "low_liquidity": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "block_num",
                          "last_balance_update",
                          "contract",
                          "amount",
                          "value",
                          "network_id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "block_num": 22968741,
                          "last_balance_update": "2025-07-21 16:24:47",
                          "contract": "0x6993301413c1867aafe2caaa692ec53a0118f06e",
                          "amount": "7917650000000000000000",
                          "value": 7917.65,
                          "name": "BOLD",
                          "symbol": "BOLD",
                          "decimals": 18,
                          "network_id": "mainnet"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getBalancesEvmByAddress",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "schema": {
              "description": "Filter by address",
              "example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
              "default": "",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "contract",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "Token Balances",
        "description": "Returns ERC-20 and native token balances for a wallet address with USD values.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/balances/svm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "program_id": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "token_account": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "mint": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "decimals": {
                            "type": "number"
                          },
                          "network_id": {
                            "description": "The Graph Network ID for SVM networks https://thegraph.com/networks",
                            "example": "solana",
                            "default": "solana",
                            "type": "string",
                            "enum": [
                              "solana"
                            ]
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "timestamp",
                          "program_id",
                          "token_account",
                          "mint",
                          "amount",
                          "value",
                          "decimals",
                          "network_id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "block_num": 352305913,
                          "datetime": "2025-07-10 05:14:43",
                          "timestamp": 1752124483,
                          "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                          "token_account": "4ct7br2vTPzfdmY3S5HLtTxcGSBfn6pnw98hsS6v359A",
                          "mint": "So11111111111111111111111111111111111111112",
                          "amount": "30697740781078",
                          "value": 30697.740781078,
                          "decimals": 9,
                          "network_id": "solana"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getBalancesSvm",
        "tags": [
          "SVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for SVM networks https://thegraph.com/networks",
              "example": "solana",
              "default": "solana",
              "type": "string",
              "enum": [
                "solana"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "token_account",
            "schema": {
              "description": "Filter by token account address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "mint",
            "schema": {
              "description": "Filter by mint address",
              "example": "So11111111111111111111111111111111111111112",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "program_id",
            "schema": {
              "description": "Filter by program ID",
              "default": "",
              "type": "string",
              "enum": [
                "",
                "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb",
                "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "Solana Balances",
        "description": "Returns SPL token balances for Solana token accounts with mint and program data.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/transfers/evm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "transaction_id": {
                            "type": "string"
                          },
                          "contract": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "from": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "to": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "network_id": {
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet",
                            "default": "mainnet",
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ]
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "decimals": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "timestamp",
                          "transaction_id",
                          "contract",
                          "from",
                          "to",
                          "amount",
                          "value",
                          "network_id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "block_num": 22349873,
                          "datetime": "2025-04-26 01:18:47",
                          "timestamp": 1745630327,
                          "transaction_id": "0xd80ed9764b0bc25b982668f66ec1cf46dbe27bcd01dffcd487f43c92f72b2a84",
                          "contract": "0xc944e90c64b2c07662a292be6244bdf05cda44a7",
                          "from": "0x7d2fbc0eefdb8721b27d216469e79ef288910a83",
                          "to": "0xa5eb953d1ce9d6a99893cbf6d83d8abcca9b8804",
                          "decimals": 18,
                          "symbol": "GRT",
                          "value": 11068.393958659999
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getTransfersEvm",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "description": "Filter by address",
              "example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "contract",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "default": 0,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "default": 9999999999,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "description": "The field by which to order the results.",
              "default": "timestamp",
              "type": "string",
              "enum": [
                "timestamp"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc).",
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "transaction_id",
            "schema": {
              "description": "Filter by transaction",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "Token Transfers",
        "description": "Returns ERC-20 and native token transfers with transaction and block data.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/transfers/svm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "signature": {
                            "type": "string"
                          },
                          "program_id": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "mint": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "authority": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "source": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "destination": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "decimals": {
                            "anyOf": [
                              {
                                "type": "integer",
                                "minimum": -9007199254740991,
                                "maximum": 9007199254740991
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "network_id": {
                            "description": "The Graph Network ID for SVM networks https://thegraph.com/networks",
                            "example": "solana",
                            "default": "solana",
                            "type": "string",
                            "enum": [
                              "solana"
                            ]
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "timestamp",
                          "signature",
                          "program_id",
                          "mint",
                          "authority",
                          "source",
                          "destination",
                          "amount",
                          "value",
                          "decimals",
                          "network_id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "block_num": 352372432,
                          "datetime": "2025-07-10 12:32:03",
                          "timestamp": 1752150723,
                          "signature": "4t7ZD3Fd8i9md6CTF6SEoZ9aPkr1fhRpXXSK2DhrUe5Wcm9VFdJ9Sn4WvbhdQaetLkiq8Xm3r5YgU1ffSJaA6c2e",
                          "program_id": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",
                          "authority": "J5kWrUKVPrtjwMVQLNgUEC9RY9Ujh8pYTN3nqWUkg1zp",
                          "mint": "So11111111111111111111111111111111111111112",
                          "source": "G4sbSww72omqHsC6tYe4syFtzHyBieS6MjbRWmSn1mt5",
                          "destination": "7ds7shXvLdNzihJXrjuoYYTr8bD5c2zwRxmZrrSZXgmM",
                          "amount": 333993128,
                          "decimals": 9,
                          "value": 0.333993128,
                          "network_id": "solana"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getTransfersSvm",
        "tags": [
          "SVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for SVM networks https://thegraph.com/networks",
              "example": "solana",
              "default": "solana",
              "type": "string",
              "enum": [
                "solana"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "mint",
            "schema": {
              "description": "Filter by mint address",
              "example": "So11111111111111111111111111111111111111112",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "source",
            "schema": {
              "description": "Filter by token account address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "destination",
            "schema": {
              "description": "Filter by token account address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "authority",
            "schema": {
              "description": "Filter by authority token account address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "program_id",
            "schema": {
              "description": "Filter by program ID",
              "default": "",
              "type": "string",
              "enum": [
                "",
                "TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb",
                "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "default": 0,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "default": 9999999999,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "description": "The field by which to order the results.",
              "default": "timestamp",
              "type": "string",
              "enum": [
                "timestamp"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc).",
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "Solana Transfers",
        "description": "Returns SPL token transfers with program, authority, and account information.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/tokens/evm/{contract}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "contract": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "circulating_supply": {
                            "type": "number"
                          },
                          "total_supply": {
                            "type": "number"
                          },
                          "holders": {
                            "type": "number"
                          },
                          "network_id": {
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet",
                            "default": "mainnet",
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ]
                          },
                          "icon": {
                            "type": "object",
                            "properties": {
                              "web3icon": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "web3icon"
                            ],
                            "additionalProperties": false
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "decimals": {
                            "type": "number"
                          },
                          "price_usd": {
                            "type": "number"
                          },
                          "market_cap": {
                            "type": "number"
                          },
                          "low_liquidity": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "timestamp",
                          "contract",
                          "circulating_supply",
                          "total_supply",
                          "holders",
                          "network_id",
                          "icon"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "block_num": 22966816,
                          "datetime": "2025-07-21 09:57:35",
                          "timestamp": 1753091855,
                          "contract": "0xc944e90c64b2c07662a292be6244bdf05cda44a7",
                          "decimals": 18,
                          "symbol": "GRT",
                          "name": "Graph Token",
                          "circulating_supply": 27051707794.58071,
                          "total_supply": 10800262823.318213,
                          "holders": 175151,
                          "network_id": "mainnet",
                          "icon": {
                            "web3icon": "GRT"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getTokensEvmByContract",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "schema": {
              "description": "Filter by contract address",
              "example": "0xc944e90c64b2c07662a292be6244bdf05cda44a7",
              "default": "",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          }
        ],
        "summary": "Token Metadata",
        "description": "Returns ERC-20 token metadata including supply, holder count, and price data.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/holders/evm/{contract}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "last_balance_update": {
                            "type": "string"
                          },
                          "address": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "network_id": {
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet",
                            "default": "mainnet",
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "decimals": {
                            "type": "number"
                          },
                          "price_usd": {
                            "type": "number"
                          },
                          "value_usd": {
                            "type": "number"
                          },
                          "low_liquidity": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "block_num",
                          "last_balance_update",
                          "address",
                          "amount",
                          "value",
                          "network_id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "block_num": 22966764,
                          "last_balance_update": "2025-07-21 09:47:11",
                          "address": "0x36aff7001294dae4c2ed4fdefc478a00de77f090",
                          "amount": "2904244446383157108596275005",
                          "value": 2904244446.3831573,
                          "name": "Graph Token",
                          "decimals": 18,
                          "symbol": "GRT",
                          "network_id": "mainnet"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getHoldersEvmByContract",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "schema": {
              "description": "Filter by contract address",
              "example": "0xc944e90c64b2c07662a292be6244bdf05cda44a7",
              "default": "",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "description": "The field by which to order the results.",
              "default": "value",
              "type": "string",
              "enum": [
                "value"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc).",
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "Token Holders",
        "description": "Returns token holders ranked by balance with holdings and supply percentage.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/swaps/evm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "network_id": {
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet",
                            "default": "mainnet",
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ]
                          },
                          "transaction_id": {
                            "type": "string"
                          },
                          "caller": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "sender": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "recipient": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "factory": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "pool": {
                            "description": "Filter by pool",
                            "default": "",
                            "type": "string"
                          },
                          "token0": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "Filter by address",
                                "default": "",
                                "type": "string"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "address",
                              "symbol",
                              "decimals"
                            ],
                            "additionalProperties": false
                          },
                          "token1": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "Filter by address",
                                "default": "",
                                "type": "string"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "address",
                              "symbol",
                              "decimals"
                            ],
                            "additionalProperties": false
                          },
                          "amount0": {
                            "type": "string"
                          },
                          "amount1": {
                            "type": "string"
                          },
                          "price0": {
                            "type": "number"
                          },
                          "price1": {
                            "type": "number"
                          },
                          "value0": {
                            "type": "number"
                          },
                          "value1": {
                            "type": "number"
                          },
                          "fee": {
                            "type": "string"
                          },
                          "protocol": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "timestamp",
                          "network_id",
                          "transaction_id",
                          "caller",
                          "sender",
                          "recipient",
                          "factory",
                          "pool",
                          "token0",
                          "token1",
                          "amount0",
                          "amount1",
                          "price0",
                          "price1",
                          "value0",
                          "value1",
                          "fee",
                          "protocol"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "block_num": 22589391,
                          "datetime": "2025-05-29 15:47:47",
                          "timestamp": 1748533667,
                          "transaction_id": "0x1ce019b0ad129b8bd21b6c83b75de5e5fd7cd07f2ee739ca3198adcbeb61f5a9",
                          "caller": "0x66a9893cc07d91d95644aedd05d03f95e1dba8af",
                          "pool": "0xb98437c7ba28c6590dd4e1cc46aa89eed181f97108e5b6221730d41347bc817f",
                          "factory": "0x000000000004444c5dc75cb358380d2e3de08a90",
                          "token0": {
                            "address": "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",
                            "symbol": "WBTC",
                            "decimals": 8
                          },
                          "token1": {
                            "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
                            "symbol": "USDC",
                            "decimals": 6
                          },
                          "sender": "0x66a9893cc07d91d95644aedd05d03f95e1dba8af",
                          "recipient": null,
                          "amount0": "-894320",
                          "amount1": "957798098",
                          "value0": -0.0089432,
                          "value1": 957.798098,
                          "price0": 107417.48517180652,
                          "price1": 0.00000930947134352077,
                          "protocol": "uniswap_v4",
                          "network_id": "mainnet"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getSwapsEvm",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "pool",
            "schema": {
              "description": "Filter by pool address",
              "example": "0x88e6A0c2dDD26FEEb64F039a2c41296FcB3f5640",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "caller",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sender",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "recipient",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Protocol name",
              "example": "uniswap_v3",
              "default": "",
              "type": "string",
              "enum": [
                "",
                "uniswap_v2",
                "uniswap_v3",
                "uniswap_v4"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "default": 0,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "default": 9999999999,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "description": "The field by which to order the results.",
              "default": "timestamp",
              "type": "string",
              "enum": [
                "timestamp"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc).",
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "transaction_id",
            "schema": {
              "description": "Filter by transaction",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "Swap Events",
        "description": "Returns DEX swap transactions from Uniswap protocols with token amounts and prices.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/swaps/svm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                          },
                          "timestamp": {
                            "type": "number"
                          },
                          "transaction_index": {
                            "type": "number"
                          },
                          "instruction_index": {
                            "type": "number"
                          },
                          "signature": {
                            "type": "string"
                          },
                          "program_id": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "program_name": {
                            "type": "string"
                          },
                          "user": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "amm": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "amm_name": {
                            "type": "string"
                          },
                          "amm_pool": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "input_mint": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "Filter by address",
                                "default": "",
                                "type": "string"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "address",
                              "symbol",
                              "decimals"
                            ],
                            "additionalProperties": false
                          },
                          "input_amount": {
                            "type": "number"
                          },
                          "output_mint": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "Filter by address",
                                "default": "",
                                "type": "string"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "address",
                              "symbol",
                              "decimals"
                            ],
                            "additionalProperties": false
                          },
                          "output_amount": {
                            "type": "number"
                          },
                          "network_id": {
                            "description": "The Graph Network ID for SVM networks https://thegraph.com/networks",
                            "example": "solana",
                            "default": "solana",
                            "type": "string",
                            "enum": [
                              "solana"
                            ]
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "timestamp",
                          "transaction_index",
                          "instruction_index",
                          "signature",
                          "program_id",
                          "program_name",
                          "user",
                          "amm",
                          "amm_name",
                          "input_mint",
                          "input_amount",
                          "output_mint",
                          "output_amount",
                          "network_id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "block_num": 352243599,
                          "datetime": "2025-07-09 22:24:36",
                          "timestamp": 1752099876,
                          "signature": "oWHA7wPQwpZhr9RJSbTNxsnPkBo1wnd68Zt2fJZPyK3cf1vYVzQiC9Et2mRNvh1t9Zt5dtmoEeSErSCqmMQ58Ls\u0000",
                          "program_id": "pAMMBay6oceH9fJKBRHGP5D4bD4sWpmSwMn52FMfXEA",
                          "program_name": "Pump.fun AMM",
                          "amm": "pAMMBay6oceH9fJKBRHGP5D4bD4sWpmSwMn52FMfXEA",
                          "amm_name": "Pump.fun AMM",
                          "amm_pool": "AmmpSnW5xVeKHTAU9fMjyKEMPgrzmUj3ah5vgvHhAB5J",
                          "user": "AEWxmZPEdHkCjJXVT9MreY7fCvzbpEK3wCVouCoEnmvE",
                          "input_mint": "9BB6NFEcjBCtnNLFko2FqVQBq8HHM13kCyYcdQbgpump",
                          "input_amount": 3653743,
                          "output_mint": "So11111111111111111111111111111111111111112",
                          "output_amount": 25548025,
                          "network_id": "solana"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getSwapsSvm",
        "tags": [
          "SVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for SVM networks https://thegraph.com/networks",
              "example": "solana",
              "default": "solana",
              "type": "string",
              "enum": [
                "solana"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "program_id",
            "schema": {
              "description": "Filter by program ID",
              "example": "pAMMBay6oceH9fJKBRHGP5D4bD4sWpmSwMn52FMfXEA",
              "default": "",
              "type": "string",
              "enum": [
                "",
                "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8",
                "6EF8rrecthR5Dkzon8Nwu78hRvfCKubJ14M5uBEwF6P",
                "pAMMBay6oceH9fJKBRHGP5D4bD4sWpmSwMn52FMfXEA",
                "JUP4Fb2cqiRUcaTHdrPC8h2gNsA2ETXiPDD33WcGuJB",
                "JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "amm",
            "schema": {
              "description": "Filter by amm address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "amm_pool",
            "schema": {
              "description": "Filter by amm pool address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "user",
            "schema": {
              "description": "Filter by user address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "input_mint",
            "schema": {
              "description": "Filter by mint address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "output_mint",
            "schema": {
              "description": "Filter by mint address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "default": 0,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "default": 9999999999,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "description": "The field by which to order the results.",
              "default": "timestamp",
              "type": "string",
              "enum": [
                "timestamp"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "orderDirection",
            "schema": {
              "description": "The order in which to return the results: Ascending (asc) or Descending (desc).",
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "signature",
            "schema": {
              "description": "Filter by transaction signature",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "Solana Swaps",
        "description": "Returns AMM swap events from Solana DEXs with input/output tokens and amounts.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/pools/evm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "number"
                          },
                          "datetime": {
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                          },
                          "transaction_id": {
                            "type": "string"
                          },
                          "factory": {
                            "description": "Filter by address",
                            "default": "",
                            "type": "string"
                          },
                          "pool": {
                            "description": "Filter by pool",
                            "default": "",
                            "type": "string"
                          },
                          "token0": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "Filter by address",
                                "default": "",
                                "type": "string"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "address",
                              "symbol",
                              "decimals"
                            ],
                            "additionalProperties": false
                          },
                          "token1": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "Filter by address",
                                "default": "",
                                "type": "string"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "decimals": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "address",
                              "symbol",
                              "decimals"
                            ],
                            "additionalProperties": false
                          },
                          "fee": {
                            "type": "number"
                          },
                          "protocol": {
                            "type": "string"
                          },
                          "network_id": {
                            "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
                            "example": "mainnet",
                            "default": "mainnet",
                            "type": "string",
                            "enum": [
                              "arbitrum-one",
                              "avalanche",
                              "base",
                              "bsc",
                              "mainnet",
                              "matic",
                              "optimism",
                              "unichain"
                            ]
                          }
                        },
                        "required": [
                          "block_num",
                          "datetime",
                          "transaction_id",
                          "factory",
                          "pool",
                          "token0",
                          "token1",
                          "fee",
                          "protocol",
                          "network_id"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "block_num": 23039540,
                          "datetime": "2025-07-31 14:00:11",
                          "transaction_id": "0xd9a2023a8cb1e49639bdab160dc5e706200b10b3bde91709fa41ab7ef44af58f",
                          "factory": "0x000000000004444c5dc75cb358380d2e3de08a90",
                          "pool": "0x3bdd63a1dcf34df8f6a568092646c6d49e482ecf3b824c06b352b7e37f96c3b8",
                          "token0": {
                            "address": "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",
                            "symbol": "wstETH",
                            "decimals": 18
                          },
                          "token1": {
                            "address": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
                            "symbol": "WETH",
                            "decimals": 18
                          },
                          "fee": 50,
                          "protocol": "uniswap_v4",
                          "network_id": "mainnet"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getPoolsEvm",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "pool",
            "schema": {
              "description": "Filter by pool address",
              "example": "0x88e6A0c2dDD26FEEb64F039a2c41296FcB3f5640",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "factory",
            "schema": {
              "description": "Filter by address",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "token",
            "schema": {
              "description": "Filter by contract address",
              "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
              "default": "",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Protocol name",
              "example": "uniswap_v3",
              "default": "",
              "type": "string",
              "enum": [
                "",
                "uniswap_v2",
                "uniswap_v3",
                "uniswap_v4"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "Liquidity Pools",
        "description": "Returns Uniswap liquidity pool metadata including token pairs, fees, and protocol versions.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ohlc/pools/evm/{pool}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "datetime": {
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                          },
                          "ticker": {
                            "type": "string"
                          },
                          "open": {
                            "type": "number"
                          },
                          "high": {
                            "type": "number"
                          },
                          "low": {
                            "type": "number"
                          },
                          "close": {
                            "type": "number"
                          },
                          "volume": {
                            "type": "number"
                          },
                          "uaw": {
                            "type": "number"
                          },
                          "transactions": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "datetime",
                          "ticker",
                          "open",
                          "high",
                          "low",
                          "close",
                          "volume",
                          "uaw",
                          "transactions"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "datetime": "2025-05-29 15:00:00",
                          "ticker": "WETHUSDC",
                          "open": 2674.206768283323,
                          "high": 2674.206768283323,
                          "low": 2648.1288363948797,
                          "close": 2648.1288363948797,
                          "volume": 5062048.294222999,
                          "transactions": 169
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getOhlcPoolsEvmByPool",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pool",
            "schema": {
              "description": "Filter by pool address",
              "example": "0x88e6A0c2dDD26FEEb64F039a2c41296FcB3f5640",
              "default": "",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "interval",
            "schema": {
              "description": "The interval for which to aggregate price data (hourly, 4-hours, daily or weekly)."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "default": 0,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "default": 9999999999,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "Pool OHLCV Data",
        "description": "Returns candlestick price data for liquidity pools across time intervals.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ohlc/prices/evm/{contract}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "datetime": {
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                          },
                          "ticker": {
                            "type": "string"
                          },
                          "open": {
                            "type": "number"
                          },
                          "high": {
                            "type": "number"
                          },
                          "low": {
                            "type": "number"
                          },
                          "close": {
                            "type": "number"
                          },
                          "volume": {
                            "type": "number"
                          },
                          "uaw": {
                            "type": "number"
                          },
                          "transactions": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "datetime",
                          "ticker",
                          "open",
                          "high",
                          "low",
                          "close",
                          "volume",
                          "uaw",
                          "transactions"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "datetime": "2025-05-29 15:00:00",
                          "ticker": "WETHUSD",
                          "open": 2669.130852861705,
                          "high": 2669.130852861705,
                          "low": 2669.130852861705,
                          "close": 2669.130852861705,
                          "volume": 184897.1695477702,
                          "uaw": 31,
                          "transactions": 35
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getOhlcPricesEvmByContract",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "schema": {
              "description": "Filter by contract address",
              "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
              "default": "",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "interval",
            "schema": {
              "description": "The interval for which to aggregate price data (hourly, 4-hours, daily or weekly)."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "default": 0,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "default": 9999999999,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "Token OHLCV Data",
        "description": "Returns candlestick price data for tokens aggregated across the top 20 trading pairs.",
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/historical/balances/evm/{address}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "datetime": {
                            "type": "string",
                            "format": "date-time",
                            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                          },
                          "contract": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "decimals": {
                            "type": "number"
                          },
                          "open": {
                            "type": "number"
                          },
                          "high": {
                            "type": "number"
                          },
                          "low": {
                            "type": "number"
                          },
                          "close": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "datetime",
                          "contract",
                          "name",
                          "symbol",
                          "decimals",
                          "open",
                          "high",
                          "low",
                          "close"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "elapsed": {
                          "type": "number"
                        },
                        "rows_read": {
                          "type": "number"
                        },
                        "bytes_read": {
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "previous_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "current_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "next_page": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        },
                        "total_pages": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "previous_page",
                        "current_page",
                        "next_page",
                        "total_pages"
                      ],
                      "additionalProperties": false
                    },
                    "results": {
                      "type": "number"
                    },
                    "total_results": {
                      "type": "number"
                    },
                    "request_time": {
                      "type": "string"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "statistics",
                    "pagination",
                    "results",
                    "total_results",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "data": [
                        {
                          "datetime": "2025-05-29 00:00:00",
                          "contract": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
                          "name": "Native",
                          "symbol": "ETH",
                          "decimals": 18,
                          "open": 237.63774262699187,
                          "high": 237.6377453469919,
                          "low": 0.10533323067535896,
                          "close": 0.15438623067535898,
                          "network_id": "mainnet"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getHistoricalBalancesEvmByAddress",
        "tags": [
          "EVM"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "schema": {
              "description": "Filter by address",
              "example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
              "default": "",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "network_id",
            "schema": {
              "description": "The Graph Network ID for EVM networks https://thegraph.com/networks",
              "example": "mainnet",
              "default": "mainnet",
              "type": "string",
              "enum": [
                "arbitrum-one",
                "avalanche",
                "base",
                "bsc",
                "mainnet",
                "matic",
                "optimism",
                "unichain"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "interval",
            "schema": {
              "description": "The interval for which to aggregate price data (hourly, 4-hours, daily or weekly)."
            },
            "required": false
          },
          {
            "in": "query",
            "name": "contracts",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "description": "Filter by address",
                "default": "",
                "type": "string"
              }
            },
            "required": false
          },
          {
            "in": "query",
            "name": "startTime",
            "schema": {
              "default": 0,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "endTime",
            "schema": {
              "default": 9999999999,
              "description": "UNIX timestamp in seconds.",
              "type": "integer",
              "minimum": -9007199254740991,
              "maximum": 9007199254740991
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The maximum number of items returned in a single request.",
              "default": 10,
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number of the results to return.",
              "default": 1,
              "type": "integer",
              "minimum": 1,
              "maximum": 767465558638
            },
            "required": false
          }
        ],
        "summary": "Historical Balances",
        "description": "Returns wallet token balance changes over time in OHLC format.",
        "x-tagGroups": [
          "Historical"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "responses": {
          "200": {
            "description": "API is healthy or degraded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "healthy",
                        "degraded",
                        "unhealthy"
                      ]
                    },
                    "checks": {
                      "type": "object",
                      "properties": {
                        "database": {
                          "type": "string",
                          "enum": [
                            "up",
                            "down",
                            "slow"
                          ]
                        },
                        "api_endpoints": {
                          "type": "string",
                          "enum": [
                            "up",
                            "down",
                            "partial",
                            "skipped"
                          ]
                        }
                      },
                      "required": [
                        "database",
                        "api_endpoints"
                      ],
                      "additionalProperties": false
                    },
                    "request_time": {
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "status",
                    "checks",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "healthy": {
                    "summary": "Healthy API",
                    "value": {
                      "status": "healthy",
                      "checks": {
                        "database": "up",
                        "api_endpoints": "up"
                      },
                      "request_time": "2025-08-06 12:00:00",
                      "duration_ms": 1250
                    }
                  },
                  "degraded": {
                    "summary": "Degraded API",
                    "value": {
                      "status": "degraded",
                      "checks": {
                        "database": "slow",
                        "api_endpoints": "partial"
                      },
                      "request_time": "2025-08-06 12:00:00",
                      "duration_ms": 3400
                    }
                  },
                  "skipped": {
                    "summary": "Database-only check",
                    "value": {
                      "status": "healthy",
                      "checks": {
                        "database": "up",
                        "api_endpoints": "skipped"
                      },
                      "request_time": "2025-08-06 12:00:00",
                      "duration_ms": 125
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "API is unhealthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "healthy",
                        "degraded",
                        "unhealthy"
                      ]
                    },
                    "checks": {
                      "type": "object",
                      "properties": {
                        "database": {
                          "type": "string",
                          "enum": [
                            "up",
                            "down",
                            "slow"
                          ]
                        },
                        "api_endpoints": {
                          "type": "string",
                          "enum": [
                            "up",
                            "down",
                            "partial",
                            "skipped"
                          ]
                        }
                      },
                      "required": [
                        "database",
                        "api_endpoints"
                      ],
                      "additionalProperties": false
                    },
                    "request_time": {
                      "type": "string",
                      "format": "date-time",
                      "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                    },
                    "duration_ms": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "status",
                    "checks",
                    "request_time",
                    "duration_ms"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "unhealthy": {
                    "summary": "Unhealthy API",
                    "value": {
                      "status": "unhealthy",
                      "checks": {
                        "database": "down",
                        "api_endpoints": "down"
                      },
                      "request_time": "2025-08-06 12:00:00",
                      "duration_ms": 5000
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getHealth",
        "tags": [
          "Monitoring"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip_endpoints",
            "schema": {
              "default": "true",
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          }
        ],
        "summary": "Health Check",
        "description": "Returns API operational status and dependency health. Use `skip_endpoints=true` for faster database-only checks."
      }
    },
    "/version": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string"
                    },
                    "commit": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "version",
                    "date",
                    "commit"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "version": "2.4.4",
                      "commit": "39f504c",
                      "date": "2025-08-07",
                      "repo": "pinax-network/token-api"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getVersion",
        "tags": [
          "Monitoring"
        ],
        "parameters": [],
        "summary": "Version",
        "description": "Returns API version, build date, and commit information."
      }
    },
    "/networks": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "networks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "fullName": {
                            "type": "string"
                          },
                          "shortName": {
                            "type": "string"
                          },
                          "caip2Id": {
                            "type": "string"
                          },
                          "networkType": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "object",
                            "properties": {
                              "web3Icons": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "web3Icons"
                            ],
                            "additionalProperties": false
                          },
                          "alias": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "id",
                          "fullName",
                          "shortName",
                          "caip2Id",
                          "networkType",
                          "icon",
                          "alias"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "networks"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "networks": [
                        {
                          "id": "mainnet",
                          "fullName": "Ethereum Mainnet",
                          "shortName": "Ethereum",
                          "networkType": "mainnet",
                          "nativeToken": "ETH",
                          "caip2Id": "eip155:1",
                          "icon": {
                            "web3Icons": {
                              "name": "ethereum"
                            }
                          },
                          "aliases": [
                            "ethereum",
                            "eth",
                            "eth-mainnet",
                            "evm-1"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Client side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 400,
                      "code": "bad_query_input",
                      "message": "Invalid query parameter provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 401,
                      "code": "unauthorized",
                      "message": "Authentication required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 403,
                      "code": "forbidden",
                      "message": "Access denied"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 400
                        },
                        {
                          "type": "number",
                          "const": 401
                        },
                        {
                          "type": "number",
                          "const": 403
                        },
                        {
                          "type": "number",
                          "const": 404
                        },
                        {
                          "type": "number",
                          "const": 405
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "authentication_failed",
                        "bad_header",
                        "missing_required_header",
                        "bad_query_input",
                        "forbidden",
                        "method_not_allowed",
                        "route_not_found",
                        "unauthorized",
                        "not_found_data"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 404,
                      "code": "not_found_data",
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server side error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "anyOf": [
                        {
                          "type": "number",
                          "const": 500
                        },
                        {
                          "type": "number",
                          "const": 502
                        },
                        {
                          "type": "number",
                          "const": 504
                        }
                      ]
                    },
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_database_response",
                        "connection_refused",
                        "database_timeout",
                        "internal_server_error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message"
                  ],
                  "additionalProperties": false
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 500,
                      "code": "internal_server_error",
                      "message": "An unexpected error occurred"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getNetworks",
        "tags": [
          "Monitoring"
        ],
        "parameters": [],
        "summary": "Networks",
        "description": "Returns supported blockchain networks with identifiers and metadata."
      }
    }
  }
}