user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;

    gzip on;
    gzip_static on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;

    server {
        listen 80;
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # Redirect `http` to `https`
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }

        # Normalize URLs
        merge_slashes off; # required for the next two rules to see the adjacent slashes
        rewrite ^//+(.*)        $scheme://$http_host/$1     permanent; # remove adjacent slashes at the start of the URI
        rewrite ^/(.*)//+(.*)   $scheme://$http_host/$1/$2  permanent; # remove adjacent slashes in the middle of the URI
        rewrite ^/([^.]*[^/])$  $scheme://$http_host/$1/    permanent; # force a trailing slash except for files with an extension

        # Permanent redirects (301)
        rewrite ^/docs/hostedservice/(.*)$                              $scheme://$http_host/docs/en/hosted-service/$1  permanent;
        rewrite ^/docs/(?!(?:[a-zA-Z][a-zA-Z]|_next|img)(?:/|$))(.*)$   $scheme://$http_host/docs/en/$1                 permanent; # Redirect to `/en` if no language in URL and not an asset URL

        # TODO: Add support for new localized URLs

        location / {
            try_files $uri $uri.html $uri/index.html =404;

            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            expires -1;
        }

        location ~ ^/docs/([a-zA-Z][a-zA-Z])/(.*) {
            error_page 404 /docs/$1/404/index.html;
        }

        error_page 500 502 503 504 /docs/50x/index.html;
    }
}

stream {}
